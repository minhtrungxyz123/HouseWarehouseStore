@model Pagination<HouseWarehouseStore.Models.SizeModel>
@{
    ViewData["Title"] = "Danh sách size";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <!-- Page Heading -->
    <h1 class="h3 mb-2 text-gray-800">Size</h1>

    <!-- DataTales Example -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Danh sách Size</h6>
        </div>
        <div class="card-header">
            <div class="row">
                <div class="col-md-6 col-xs-12">
                    <a class="btn btn-success" id="them" onclick="Create()"><i class="fa-solid fa-plus"></i> Tạo mới</a>
                </div>
                <div class="col-md-6 col-xs-12">
                    <a class="btn btn-success" onclick="ExportOrder()"><i class="fa-solid fa-plus"></i> Xuất excel</a>
                </div>
                <div class="col-md-6 col-xs-12">
                    <form asp-action="Index" method="get">
                        <div class="row">
                            <div class="col-md-9">
                                <input type="text" value="@ViewBag.Keyword" name="keyword" class="form-control" />
                            </div>
                            <div class="cold-md-3">
                                <button type="submit" class="btn btn-primary">Tìm</button>
                                <button type="button" onclick="window.location.href='/Size/Index'" class="btn btn-dark">Tải lại</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <div id="msgReload" class="alert alert-success d-none" role="alert">
                        Thêm dữ liệu thành công
                    </div>
                    <div id="msgEdit" class="alert alert-success d-none" role="alert">
                        Sửa dữ liệu thành công
                    </div>
                    <div id="msgDelete" class="alert alert-success d-none" role="alert">
                        Xóa dữ liệu thành công
                    </div>
                    @if (ViewBag.SuccessMsg != null)
                    {
                        <div id="msgAlert" class="alert alert-success" role="alert">
                            @ViewBag.SuccessMsg
                        </div>
                    }
                </div>
            </div>
            <div class="table-responsive">
                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0" style="white-space: nowrap;">
                    <thead>
                        <tr>
                            <th>
                                Size
                            </th>
                            <th>Chức năng</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Items)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.SizeProduct)
                                </td>
                                <td>
                                    <button id="sua" onclick="Edit('@item.SizeId')" class="btn btn-primary"><i class="fa-solid fa-pen"></i> Sửa</button>
                                    <button onclick="Detail('@item.SizeId')" class="btn" style="background: yellow;"><i class="fa-solid fa-eye"></i> Chi tiết</button>
                                    <button id="xoa" onclick="Delete('@item.SizeId')" class="btn btn-danger"><i class="fa-solid fa-trash-can"></i> Xóa</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            @await Component.InvokeAsync("Pager", Model)
        </div>
    </div>
</div>

<div id="contactDetails"></div>

@section Scripts{
    <script>
        setTimeout(function() {
            $('#msgAlert').fadeOut('slow');
        }, 2000);

        function Create() {
            $.get("/Size/Create", function(data) {
                $("#contactDetails").html(data);
                $("#contactDetails").dialog("open");
                $(".k-overlay").removeClass("d-none");
            });
        }

        function ExportOrder() {
            $.get("/Size/ExportOrder", function(data) {
                $("#contactDetails").html(data);
            });
        }

        function Edit(id) {
            $.get("/Size/Edit", { id: id }, function(data) {
                $("#contactDetails").html(data);
                $("#contactDetails").dialog("open");
            });
        }

        function Detail(id) {
            $.get("/Size/Detail", { id: id }, function(data) {
                $("#contactDetails").html(data);
                $("#contactDetails").dialog("open");
            });
        }

        function Delete(id) {
            if (confirm("Bạn có chắc chắn xóa không?")) {
                $.post("/Size/DeleteConfirmed", { id: id }, function(data) {
                    if (data) {
                        if (confirm("Xóa thành công"))
                            window.location.assign('/Size/Index')
                    } else {
                        alert("Quá trình thực hiện không thành công. Hãy thử lại");
                    }
                });
            }
        }

        $(function() {
            $("#contactDetails").dialog({
                autoOpen: false,
                modal: true,
                width: 500,
                show: {
                    effect: "blind",
                    duration: 1000
                },
                hide: {
                    effect: "explode",
                    duration: 1000
                }
            });
        });

        //signalR
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("http://localhost:5000/signalr")
            .configureLogging(signalR.LogLevel.Information)
            .build();

        async function start() {
            try {
                await connection.start();
                console.log("SignalR Connected.");
            } catch (err) {
                console.log(err);
                setTimeout(start, 5000);
            }
        };

        connection.onclose(async () => {
            await start();
        });

        // Start the connection.
        start();

        //Create
        connection.on("MasterCreateToCLient", (user, message) => {

            if (user) {
                $('#msgReload').removeClass("d-none");
                setInterval(function() {
                    location.reload();
                }, 3000)
            }
            $("#msgAlert").text(user.data)
        });

        $("#them").click(async function() {
            try {
                await connection.invoke("MasterCreate" / $("#msgAlert").val());
            } catch (err) {
                console.error(err);
            }
        });


        //Edit
        connection.on("MasterEditToCLient", (user, message) => {
            if (user) {
                $('#msgEdit').removeClass("d-none");
                setInterval(function() {
                    location.reload();
                }, 3000)
            }
            $("#msgAlert").text(user.data)
        });

        $("#sua").click(async function() {
            try {
                await connection.invoke("MasterEdit", $("#msgAlert").val());
            } catch (err) {
                console.error(err);
            }
        });

        //Delete
        connection.on("MasterDeleteToCLient", (user, message) => {
            if (user)
                $('#msgDelete').removeClass("d-none");
            setInterval(function() {
                location.reload();
            }, 3000)
            $("#msgAlert").text(user.data)
        });

        $("#xoa").click(async function() {
            try {
                await connection.invoke("MasterDelete", $("#msgAlert").val());
            } catch (err) {
                console.error(err);
            }
        });

    </script>
}

